///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// UpdateAppOKCode is the HTTP code returned for type UpdateAppOK
const UpdateAppOKCode int = 200

/*UpdateAppOK Successful update

swagger:response updateAppOK
*/
type UpdateAppOK struct {

	/*
	  In: Body
	*/
	Payload *v1.Application `json:"body,omitempty"`
}

// NewUpdateAppOK creates UpdateAppOK with default headers values
func NewUpdateAppOK() *UpdateAppOK {

	return &UpdateAppOK{}
}

// WithPayload adds the payload to the update app o k response
func (o *UpdateAppOK) WithPayload(payload *v1.Application) *UpdateAppOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update app o k response
func (o *UpdateAppOK) SetPayload(payload *v1.Application) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAppOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAppBadRequestCode is the HTTP code returned for type UpdateAppBadRequest
const UpdateAppBadRequestCode int = 400

/*UpdateAppBadRequest Invalid input

swagger:response updateAppBadRequest
*/
type UpdateAppBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateAppBadRequest creates UpdateAppBadRequest with default headers values
func NewUpdateAppBadRequest() *UpdateAppBadRequest {

	return &UpdateAppBadRequest{}
}

// WithPayload adds the payload to the update app bad request response
func (o *UpdateAppBadRequest) WithPayload(payload *v1.Error) *UpdateAppBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update app bad request response
func (o *UpdateAppBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAppBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAppNotFoundCode is the HTTP code returned for type UpdateAppNotFound
const UpdateAppNotFoundCode int = 404

/*UpdateAppNotFound Application not found

swagger:response updateAppNotFound
*/
type UpdateAppNotFound struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateAppNotFound creates UpdateAppNotFound with default headers values
func NewUpdateAppNotFound() *UpdateAppNotFound {

	return &UpdateAppNotFound{}
}

// WithPayload adds the payload to the update app not found response
func (o *UpdateAppNotFound) WithPayload(payload *v1.Error) *UpdateAppNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update app not found response
func (o *UpdateAppNotFound) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAppNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAppInternalServerErrorCode is the HTTP code returned for type UpdateAppInternalServerError
const UpdateAppInternalServerErrorCode int = 500

/*UpdateAppInternalServerError Internal error

swagger:response updateAppInternalServerError
*/
type UpdateAppInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateAppInternalServerError creates UpdateAppInternalServerError with default headers values
func NewUpdateAppInternalServerError() *UpdateAppInternalServerError {

	return &UpdateAppInternalServerError{}
}

// WithPayload adds the payload to the update app internal server error response
func (o *UpdateAppInternalServerError) WithPayload(payload *v1.Error) *UpdateAppInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update app internal server error response
func (o *UpdateAppInternalServerError) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAppInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
